"""create initial tables

Revision ID: 6d78b3229a9d
Revises: 
Create Date: 2025-10-12 17:18:45.700302

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6d78b3229a9d'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('causes_of_death',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_causes_of_death_id'), 'causes_of_death', ['id'], unique=False)
    op.create_index(op.f('ix_causes_of_death_name'), 'causes_of_death', ['name'], unique=True)
    op.create_table('diseases',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_diseases_id'), 'diseases', ['id'], unique=False)
    op.create_index(op.f('ix_diseases_name'), 'diseases', ['name'], unique=True)
    op.create_table('geo_admin_unit',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('country_code', sa.String(length=8), nullable=False),
    sa.Column('state_name', sa.String(length=128), nullable=True),
    sa.Column('lga_name', sa.String(length=128), nullable=True),
    sa.Column('ward_name', sa.String(length=128), nullable=True),
    sa.Column('adm_level', sa.Integer(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_geo_admin_unit_country_code'), 'geo_admin_unit', ['country_code'], unique=False)
    op.create_index(op.f('ix_geo_admin_unit_lga_name'), 'geo_admin_unit', ['lga_name'], unique=False)
    op.create_index(op.f('ix_geo_admin_unit_state_name'), 'geo_admin_unit', ['state_name'], unique=False)
    op.create_table('outbreak_reports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('disease_name', sa.String(), nullable=True),
    sa.Column('country_name', sa.String(), nullable=True),
    sa.Column('region', sa.String(), nullable=True),
    sa.Column('country_code', sa.String(), nullable=True),
    sa.Column('first_epiwk', sa.Date(), nullable=True),
    sa.Column('last_epiwk', sa.Date(), nullable=True),
    sa.Column('case_total', sa.Integer(), nullable=True),
    sa.Column('death_total', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_outbreak_reports_country_code'), 'outbreak_reports', ['country_code'], unique=False)
    op.create_index(op.f('ix_outbreak_reports_country_name'), 'outbreak_reports', ['country_name'], unique=False)
    op.create_index(op.f('ix_outbreak_reports_disease_name'), 'outbreak_reports', ['disease_name'], unique=False)
    op.create_index(op.f('ix_outbreak_reports_id'), 'outbreak_reports', ['id'], unique=False)
    op.create_table('disease_indicators',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('disease_id', sa.Integer(), nullable=True),
    sa.Column('geo_admin_unit_id', sa.Integer(), nullable=True),
    sa.Column('indicator_code', sa.String(), nullable=True),
    sa.Column('indicator_name', sa.String(), nullable=True),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('start_year', sa.Integer(), nullable=True),
    sa.Column('end_year', sa.Integer(), nullable=True),
    sa.Column('dimension_type', sa.String(), nullable=True),
    sa.Column('dimension_code', sa.String(), nullable=True),
    sa.Column('dimension_name', sa.String(), nullable=True),
    sa.Column('numeric', sa.Float(), nullable=True),
    sa.Column('value', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['disease_id'], ['diseases.id'], ),
    sa.ForeignKeyConstraint(['geo_admin_unit_id'], ['geo_admin_unit.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_disease_indicators_geo_admin_unit_id'), 'disease_indicators', ['geo_admin_unit_id'], unique=False)
    op.create_index(op.f('ix_disease_indicators_id'), 'disease_indicators', ['id'], unique=False)
    op.create_index(op.f('ix_disease_indicators_indicator_code'), 'disease_indicators', ['indicator_code'], unique=False)
    op.create_index(op.f('ix_disease_indicators_year'), 'disease_indicators', ['year'], unique=False)
    op.create_table('health_facilities_master',
    sa.Column('facility_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('facility_name', sa.Text(), nullable=False),
    sa.Column('facility_type', sa.String(length=64), nullable=True),
    sa.Column('category', sa.String(length=128), nullable=True),
    sa.Column('ownership', sa.String(length=128), nullable=True),
    sa.Column('functional_status', sa.String(length=64), nullable=True),
    sa.Column('geo_admin_unit_id', sa.Integer(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('properties', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['geo_admin_unit_id'], ['geo_admin_unit.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('facility_id')
    )
    op.create_index(op.f('ix_health_facilities_master_facility_name'), 'health_facilities_master', ['facility_name'], unique=False)
    op.create_index(op.f('ix_health_facilities_master_geo_admin_unit_id'), 'health_facilities_master', ['geo_admin_unit_id'], unique=False)
    op.create_index(op.f('ix_health_facilities_master_latitude'), 'health_facilities_master', ['latitude'], unique=False)
    op.create_index(op.f('ix_health_facilities_master_longitude'), 'health_facilities_master', ['longitude'], unique=False)
    op.create_table('mortality_statistics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('cause_id', sa.Integer(), nullable=True),
    sa.Column('geo_admin_unit_id', sa.Integer(), nullable=True),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('gender', sa.String(), nullable=True),
    sa.Column('deaths', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['cause_id'], ['causes_of_death.id'], ),
    sa.ForeignKeyConstraint(['geo_admin_unit_id'], ['geo_admin_unit.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_mortality_statistics_country'), 'mortality_statistics', ['country'], unique=False)
    op.create_index(op.f('ix_mortality_statistics_gender'), 'mortality_statistics', ['gender'], unique=False)
    op.create_index(op.f('ix_mortality_statistics_geo_admin_unit_id'), 'mortality_statistics', ['geo_admin_unit_id'], unique=False)
    op.create_index(op.f('ix_mortality_statistics_id'), 'mortality_statistics', ['id'], unique=False)
    op.create_index(op.f('ix_mortality_statistics_year'), 'mortality_statistics', ['year'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_mortality_statistics_year'), table_name='mortality_statistics')
    op.drop_index(op.f('ix_mortality_statistics_id'), table_name='mortality_statistics')
    op.drop_index(op.f('ix_mortality_statistics_geo_admin_unit_id'), table_name='mortality_statistics')
    op.drop_index(op.f('ix_mortality_statistics_gender'), table_name='mortality_statistics')
    op.drop_index(op.f('ix_mortality_statistics_country'), table_name='mortality_statistics')
    op.drop_table('mortality_statistics')
    op.drop_index(op.f('ix_health_facilities_master_longitude'), table_name='health_facilities_master')
    op.drop_index(op.f('ix_health_facilities_master_latitude'), table_name='health_facilities_master')
    op.drop_index(op.f('ix_health_facilities_master_geo_admin_unit_id'), table_name='health_facilities_master')
    op.drop_index(op.f('ix_health_facilities_master_facility_name'), table_name='health_facilities_master')
    op.drop_table('health_facilities_master')
    op.drop_index(op.f('ix_disease_indicators_year'), table_name='disease_indicators')
    op.drop_index(op.f('ix_disease_indicators_indicator_code'), table_name='disease_indicators')
    op.drop_index(op.f('ix_disease_indicators_id'), table_name='disease_indicators')
    op.drop_index(op.f('ix_disease_indicators_geo_admin_unit_id'), table_name='disease_indicators')
    op.drop_table('disease_indicators')
    op.drop_index(op.f('ix_outbreak_reports_id'), table_name='outbreak_reports')
    op.drop_index(op.f('ix_outbreak_reports_disease_name'), table_name='outbreak_reports')
    op.drop_index(op.f('ix_outbreak_reports_country_name'), table_name='outbreak_reports')
    op.drop_index(op.f('ix_outbreak_reports_country_code'), table_name='outbreak_reports')
    op.drop_table('outbreak_reports')
    op.drop_index(op.f('ix_geo_admin_unit_state_name'), table_name='geo_admin_unit')
    op.drop_index(op.f('ix_geo_admin_unit_lga_name'), table_name='geo_admin_unit')
    op.drop_index(op.f('ix_geo_admin_unit_country_code'), table_name='geo_admin_unit')
    op.drop_table('geo_admin_unit')
    op.drop_index(op.f('ix_diseases_name'), table_name='diseases')
    op.drop_index(op.f('ix_diseases_id'), table_name='diseases')
    op.drop_table('diseases')
    op.drop_index(op.f('ix_causes_of_death_name'), table_name='causes_of_death')
    op.drop_index(op.f('ix_causes_of_death_id'), table_name='causes_of_death')
    op.drop_table('causes_of_death')
    # ### end Alembic commands ###
